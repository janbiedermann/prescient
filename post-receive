#!/bin/bash
PC="/etc/prescient.conf"
pwd=`pwd`
repo=${pwd:${#HOME}}
while read oval commit ref; do
  if [ '0000000000000000000000000000000000000000' == "$commit" ]; then continue; fi

  # try to get .prescient from tree
  tmp_dir=`mktemp -d /tmp/prescient-XXXXX`
  GIT_WORKING_DIR="${tmp_dir}/tree"
  mkdir ${GIT_WORKING_DIR}
  GWD_PRESCIENT="${GIT_WORKING_DIR}/.prescient"
  git clone $GIT_DIR $GIT_WORKING_DIR >/dev/null 2>/dev/null
  unset GIT_DIR
  cd $GIT_WORKING_DIR
  git checkout $commit >/dev/null 2>/dev/null

  if [ ! -f $GWD_PRESCIENT ]; then
    echo "No .prescient file found in tree of ${commit}, skipping CI."
  else
    # prepare repo
    tree_zip="${tmp_dir}/tree.zip"
    cd $tmp_dir
    zip -1 -y -r -q "${tmp_dir}/tree.zip" tree

    machines=`grep -o -E "^[a-zA-Z0-9_-]+" ${GWD_PRESCIENT}` # security !!!
    for machine in $machines; do
      machine_line=`grep "${machine}|" ${PC} | shuf -n 1`
      if [ -z "$machine_line" ]; then
        echo "Can't enqueue CI run for $commit on '$machine'. No machine configuration for '$machine' found!"
      else
        host=`echo $machine_line | awk -F'|' '{print $2}'`
        user=`echo $machine_line | awk -F'|' '{print $3}'`
        vm=`echo $machine_line | awk -F'|' '{print $4}'`
        vm_user=`echo $machine_line | awk -F'|' '{print $5}'`
        vm_user_pass=`echo $machine_line | awk -F'|' '{print $6}' | tr -d '\r'`
        ci_vm="${vm}_Prescient"
        echo "Enqueueing CI run for $commit on '$machine'."
        cm="${commit}_$machine"
        script="$tmp_dir/$cm.sh"
        cl_script="$tmp_dir/${cm}_copy_log" # at script
        macl_script="$tmp_dir/${cm}_cleanup_host" # at script
        rt_script="$tmp_dir/${cm}_remove_tmp" # at script

        # create script
        echo '#!/bin/bash' > $script
        echo "state=\`vboxmanage showvminfo '$vm' 2>/dev/null | grep ^State: | awk '{\$1=\"\"; print substr(\$0,2)}'\`" >> $script
        echo "ci_state=\`vboxmanage showvminfo '$ci_vm' 2>/dev/null | grep ^State: | awk '{\$1=\"\"; print substr(\$0,2)}'\`" >> $script
        # check if vm exists
        echo 'if [ -z "$state" ]; then' >> $script
        echo "  echo \"VM '$vm' doesn't exist!\"" >> $script
        echo '  exit 1' >> $script
        echo 'fi' >> $script
        # clone, if necessary and create base snapshot
        echo 'function clone_vm() {' >> $script
        echo "  vboxmanage unregistervm '$ci_vm' --delete 2>/dev/null" >> $script
        echo "  vboxmanage clonevm '$vm' --mode=machine --name='$ci_vm' --register" >> $script
        echo "  vboxmanage snapshot '$ci_vm' take PrescientBase" >> $script
        echo "  echo -n \$state > \"\${HOME}/.prescient/$vm\"" >> $script
        echo '}' >> $script
        echo 'running=`echo $state | grep running`' >> $script
        echo "old_state=\`cat \"\${HOME}/.prescient/$vm\" 2>/dev/null\`" >> $script
        echo 'if [ -n "$running" ]; then' >> $script
        echo "  echo \"'$vm' is running, not cloning!\"" >> $script
        echo 'elif [ "$state" != "$old_state" ]; then' >> $script
        echo '  clone_vm' >> $script
        echo 'elif [ -z "$ci_state" ]; then' >> $script
        echo '  clone_vm' >> $script
        echo 'fi' >> $script
        # restore snapshot
        echo "vboxmanage snapshot '$ci_vm' restore PrescientBase" >> $script
        # get exe
        echo "unzip -q -d \"\${HOME}/.prescient/$cm\" \"\${HOME}/.prescient/$cm.zip\" tree/.prescient" >> $script
        echo "exe=\`grep '$machine:' \"\${HOME}/.prescient/$cm/tree/.prescient\" | grep -o -E '[^a-zA-Z0-9_-]+[^:].*$' | grep -o -E '[^:].*'\`" >> $script
        # start vm
        echo "vboxmanage startvm '$ci_vm' --type=headless" >> $script
        # enable port forwarding to ssh
        echo 'port=`shuf -i 30000-40000 -n 1`' >> $script
        echo "vboxmanage controlvm '$ci_vm' natpf1 delete prescient_ssh 2>/dev/null" >> $script
        echo "vboxmanage controlvm '$ci_vm' natpf1 \"prescient_ssh,tcp,127.0.0.1,\$port,,22\"" >> $script
        # wait until vm is ready
        echo "started=''" >> $script
        echo 'while [ -z "$started" ]; do' >> $script
        echo "  started=\`sleep 10; sshpass -p '$vm_user_pass' ssh -o LogLevel=ERROR -o ConnectTimeout=10 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l '$vm_user' -p \$port 127.0.0.1 'echo started' 2>/dev/null\`" >> $script
        echo 'done' >> $script
        # copy tree, check vm OS, unzip
        echo "sshpass -p '$vm_user_pass' scp -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -P \$port ~/.prescient/$cm.zip '$vm_user@127.0.0.1:\$HOME/'" >> $script
        echo "win=\`vboxmanage guestproperty get '$ci_vm' /VirtualBox/GuestInfo/OS/Product | grep -i windows\`" >> $script
        echo 'if [ -n "$win" ]; then' >> $script # Windows
        echo "  sshpass -p '$vm_user_pass' ssh -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l '$vm_user' -p \$port 127.0.0.1 powershell -Command Expand-Archive -Path '\$HOME/$cm.zip' -DestinationPath '\$HOME'" >> $script
        echo 'else' >> $script # *nixish
        echo "  sshpass -p '$vm_user_pass' ssh -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l '$vm_user' -p \$port 127.0.0.1 unzip -q -d '\$HOME' '\$HOME/$cm.zip'" >> $script
        echo 'fi' >> $script
        # run exe
        echo "sshpass -p '$vm_user_pass' ssh -o LogLevel=ERROR -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -l '$vm_user' -p \$port 127.0.0.1 \"cd \\\$HOME/tree; \$exe\" 2>&1 | tr -d '\r' >~/.prescient/$cm.log_tmp" >> $script
        # move log
        echo "mv ~/.prescient/$cm.log_tmp ~/.prescient/$cm.log" >> $script
        # call plugin if it exists
        echo "if [ -x './prescient/${vm}' ]; then" >> $script
        echo "  './prescient/$vm' '$vm' '$ci_vm' '$vm_user' '$vm_user_pass' \"\$port\"" >> $script
        echo 'fi' >> $script
        # shutdown
        echo "vboxmanage controlvm '$ci_vm' poweroff" >> $script
        echo "running='running'" >> $script
        echo 'while [ -n "$running" ]; do' >> $script
        echo "  running=\`sleep 10; vboxmanage list runningvms | grep '\"$ci_vm\"'\`" >> $script
        echo 'done' >> $script
        echo 'exit 0' >> $script

        # enqueue execution of script
        chmod 700 $script
        ssh $user@$host mkdir -p '$HOME/.prescient'
        scp -p $script "$user@$host:"'$HOME/.prescient/'"$cm.sh"
        scp $tree_zip "$user@$host:"'$HOME/.prescient/'"$cm.zip"
        nq_file=`ssh $user@$host nq -c '$HOME/.prescient/'"$cm.sh"`
        nq_pid=`echo $nq_file | cut -d'.' -f 2`

        if [ -n "$nq_pid" ]; then # guard
          echo "if [ -f \"\$HOME/$nq_file\" ]; then" > $macl_script
          echo "  kill -9 $nq_pid" >> $macl_script
          echo "  rm -f \"\$HOME/$nq_file\"" >> $macl_script
          echo 'fi' >> $macl_script
          echo "rm -rf \"\$HOME/.prescient/$cm*\"" >> $macl_script
          scp $macl_script "$user@$host:"'$HOME/.prescient/'"${cm}_cleanup.sh"
          ssh $user@$host at -M -f '$HOME/.prescient/'"${cm}_cleanup.sh" now + 12 hours 1>/dev/null 2>&1
        fi

        # copy log, try 360 * 2 min = 12 hours
        mkdir -p "/var/lib/prescient${repo}"
        echo '0' > $tmp_dir/$cm.cl_counter
        echo "scp '$user@$host:"'$HOME/.prescient/'"${cm}.log' /var/lib/prescient${repo}/ 2>/dev/null" >> $cl_script
        echo "if [ ! -f /var/lib/prescient${repo}/$cm.log ]; then" >> $cl_script
        echo "  c=`cat $tmp_dir/$cm.cl_counter`" >> $cl_script
        echo '  if [ 360 -gt $c ]; then' >> $cl_script
        echo '    echo $(($c+1)) > '"$tmp_dir/$cm.cl_counter" >> $cl_script
        echo "    at -M -f $cl_script now + 2 min" >> $cl_script
        echo '  fi' >> $cl_script
        echo 'fi' >> $cl_script
        at -M -f $cl_script now + 2 min 1>/dev/null 2>&1
      fi
    done
  fi

  # cleanup everything else
  echo "rm -rf $tmp_dir" > $rt_script
  at -M -f $rt_script now + 13 hours 2>/dev/null
done

exit 0
